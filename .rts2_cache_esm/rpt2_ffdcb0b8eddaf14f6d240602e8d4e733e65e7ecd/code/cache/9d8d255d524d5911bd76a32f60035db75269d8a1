{"code":"import { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { FormContext } from './form-context';\r\nfunction Field({ name, children }) {\r\n    const { form } = useContext(FormContext);\r\n    if (!(name in form.fields)) {\r\n        throw Error(`There is no field named ${name}`);\r\n    }\r\n    const field = form.fields[name];\r\n    const { placeholder, value, isFocused, label = '', errors, isTouched, hasErrors: fieldHasErrors, } = field;\r\n    function change(e) {\r\n        field.value = e.currentTarget.value;\r\n    }\r\n    const input = {\r\n        name,\r\n        placeholder,\r\n        value,\r\n        id: name,\r\n        key: `${name}-${isFocused}`,\r\n        autoFocus: isFocused,\r\n        onChange: change,\r\n    };\r\n    const hasErrors = isTouched && fieldHasErrors;\r\n    return children({ input, errors, hasErrors, label });\r\n}\r\nexport const ObservedField = observer(Field);\r\n//# sourceMappingURL=field.js.map","references":["/Users/deric/Code/tiny-mobx-form/node_modules/@types/react/index.d.ts","/Users/deric/Code/tiny-mobx-form/packages/tiny-mobx-form-react/node_modules/tiny-mobx-form/dist/index.d.ts","/Users/deric/Code/tiny-mobx-form/node_modules/mobx-react-lite/dist/index.d.ts","/Users/deric/Code/tiny-mobx-form/packages/tiny-mobx-form-react/src/form-context.ts"],"map":"{\"version\":3,\"file\":\"field.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/field.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAc,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAE1C,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAuB7C,SAAS,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAc;IAC3C,MAAM,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;IACzC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;QAC1B,MAAM,KAAK,CAAC,2BAA2B,IAAI,EAAE,CAAC,CAAC;KAChD;IACD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,MAAM,EACJ,WAAW,EACX,KAAK,EACL,SAAS,EACT,KAAK,GAAG,EAAE,EACV,MAAM,EACN,SAAS,EACT,SAAS,EAAE,cAAc,GAC1B,GAAG,KAAK,CAAC;IACV,SAAS,MAAM,CAAC,CAAY;QAC1B,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;IACtC,CAAC;IACD,MAAM,KAAK,GAAG;QACZ,IAAI;QACJ,WAAW;QACX,KAAK;QACL,EAAE,EAAE,IAAI;QACR,GAAG,EAAE,GAAG,IAAI,IAAI,SAAS,EAAE;QAC3B,SAAS,EAAE,SAAS;QACpB,QAAQ,EAAE,MAAM;KACjB,CAAC;IACF,MAAM,SAAS,GAAG,SAAS,IAAI,cAAc,CAAC;IAE9C,OAAO,QAAQ,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACvD,CAAC;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC\"}","dts":{"name":"/Users/deric/Code/tiny-mobx-form/packages/tiny-mobx-form-react/src/field.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { IField } from 'tiny-mobx-form';\r\ndeclare type EventType = React.FormEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;\r\ninterface Input extends Pick<IField, 'name' | 'placeholder' | 'value'> {\r\n    autoFocus: boolean;\r\n    key: string;\r\n    id: string;\r\n    onChange: (e: EventType) => void;\r\n}\r\ninterface FieldValue {\r\n    input: Input;\r\n    label: string;\r\n    errors: string[];\r\n    hasErrors: boolean;\r\n}\r\ninterface FieldProps {\r\n    name: string;\r\n    children: (field: FieldValue) => React.ReactNode | React.ReactElement | any;\r\n}\r\nexport declare const ObservedField: React.FunctionComponent<FieldProps>;\r\nexport {};\r\n"}}
